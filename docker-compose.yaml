version: '3.3'

services:
#start the databox platform
    container-manager:
        image: ${DOCKER_REPO}container-manager:${DATABOX_CORE_IMAGE_VERSION}
        ports:
            - '443:443'
            - '80:80'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '${DATABOX_PATH}/docker-compose.yaml:/cfg/docker-compose.yaml'
            - '${DATABOX_PATH}/src/config.json:/cfg/config.json'
            - '${DATABOX_PATH}/certs:/certs'
            - './slaStore:/slaStore'
            - '${DATABOX_PATH}/.resolv.conf:/etc/resolv.conf'
        environment:
            - 'DATABOX_ARBITER_ENDPOINT=https://arbiter:8080'
            - 'DATABOX_DEV=${DATABOX_DEV}'
            - 'DATABOX_SDK=${DATABOX_SDK}'
            - 'DATABOX_VERSION=${DATABOX_VERSION}'
        networks:
            - databox-system-net
            - databox-cm-app-server-net
        secrets:
            - DATABOX_ROOT_CA
            - CM_KEY
            - DATABOX_CM.pem
            - DATABOX_NETWORK_KEY
        depends_on:
            - arbiter
        deploy:
            replicas: 1
            labels:
                databox.type: "system"
            placement:
                constraints:
                    - 'node.role == manager'

    arbiter:
        image: ${DOCKER_REPO}arbiter:${DATABOX_CORE_IMAGE_VERSION}
        networks:
            - databox-system-net
        secrets:
            - DATABOX_ROOT_CA
            - CM_KEY
            - DATABOX_ARBITER.pem
            - DATABOX_EXPORT_SERVICE_KEY
        deploy:
            replicas: 1
            labels:
                databox.type: "system"
            endpoint_mode: dnsrr
            placement:
                constraints:
                    - 'node.role == manager'

    export-service:
        image: ${DOCKER_REPO}export-service:${DATABOX_CORE_IMAGE_VERSION}
        depends_on:
            - arbiter
        environment:
            - 'DATABOX_ARBITER_ENDPOINT=https://arbiter:8080'
        networks:
            - databox-system-net
        secrets:
            - DATABOX_ROOT_CA
            - DATABOX_EXPORT_SERVICE_PEM.json
            - DATABOX_EXPORT_SERVICE.pem
            - DATABOX_EXPORT_SERVICE_KEY
        deploy:
            replicas: 1
            labels:
                databox.type: "system"
            endpoint_mode: dnsrr
            placement:
                constraints:
                - 'node.role == manager'

secrets:
  DATABOX_ROOT_CA:
    file: ${DATABOX_PATH}/certs/containerManager.crt
  CM_KEY:
    file: ${DATABOX_PATH}/certs/arbiterToken-container-manager
  DATABOX_CM.pem:
    file: ${DATABOX_PATH}/certs/containerManager.pem
  DATABOX_ARBITER.pem:
    file: ${DATABOX_PATH}/certs/arbiter.pem
  DATABOX_EXPORT_SERVICE_PEM.json:
    file: ${DATABOX_PATH}/certs/export-service.json
  DATABOX_EXPORT_SERVICE.pem:
    file: ${DATABOX_PATH}/certs/export-service.pem
  DATABOX_EXPORT_SERVICE_KEY:
    file: ${DATABOX_PATH}/certs/arbiterToken-export-service
  DATABOX_NETWORK_KEY:
    file: ${DATABOX_PATH}/certs/arbiterToken-databox-network

networks:
    databox-system-net:
        external: true
    databox-cm-app-server-net:
        driver: overlay
