#!/bin/bash

#makesure we are in the right dir
MY_PATH="`dirname \"$0\"`"              # relative
MY_PATH="`( cd \"$MY_PATH\" && pwd )`"  # absolutized and normalized
cd "${MY_PATH}"

#include helper functions
source ./scripts/utils.sh

## debug
if [[ "$DATABOX_DEBUG" = "true" ]]; then
  set -x
  PS4='$LINENO: '
fi

declare -r ME="$(basename $0)"

## check we have the tools
if ! [ -x "$(command -v docker)" ]; then
  die 1 "docker is not installed;"`
       `"see https://docs.docker.com/engine/installation/"
fi

if ! [ -x "$(command -v docker-compose)" ]; then
  die 2 "docker-compose is not installed;"`
       `"see https://docs.docker.com/compose/install/#install-compose"
fi

if [ "$1" == "sdk" ]
then
  docker-compose -f docker-databox-sdk.yaml down
  die 3 "SDK stoped."
fi

## stop Databox
err "Stopping Databox ..."
export DOCKER_REPO=""
## stop drivers first to give stores time to write data
if [[ $(docker ps -aq -f status=created -f status=running -f "label=databox.type=driver") ]]
then
  err "stopping drivers ..."
  docker stop $(docker ps -aq -f status=running -f "label=databox.type=driver")
fi
if [[ $(docker ps -aq -f status=running -f "label=databox.type=app") ]]
then
  err "stopping apps ..."
  docker stop $(docker ps -aq -f status=running -f "label=databox.type=app")
fi
if [[ $(docker ps -aq -f status=running -f "label=databox.type=store") ]]
then
  err "stopping stores ..."
  docker stop $(docker ps -aq -f status=running -f "label=databox.type=store")
fi
docker stack rm databox
docker-compose -f ./docker-databox-appstore.yaml down

rm -f .resolv.conf
err "Stopping and Removing databox-bridge ..."
docker-compose -f ./docker-core-network.yaml down
err "Removing network databox-system-net ..."
docker network rm databox-system-net >/dev/null 2>&1

err "Waiting ..."
sleep 10 # give docker some time to remove the networks etc
err "Forcing ..."
docker swarm leave --force

if [[ $(docker ps -aq -f status=created -f status=exited -f "label=databox.type") ]]
then
  err "Removing exited containers ..."
  docker rm $(docker ps -aq -f status=created -f status=exited -f "label=databox.type")
fi
err "Done!"
